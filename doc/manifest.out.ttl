@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix pav: <http://purl.org/pav/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix rdr: <http://www.re3data.org/schema/3-0> .
@prefix prov: <https://www.w3.org/TR/prov-o/> .
@prefix rdfs: <https://www.w3.org/2000/01/rdf-schema#> .

@prefix saved: <https://marine.gov.scot/metadata/saved/schema/> .
@prefix job: <https://marine.gov.scot/metadata/saved/schema/job_> .
@prefix service: <https://marine.gov.scot/metadata/saved/rap/> .
@prefix stage: <https://marine.gov.scot/metadata/saved/rap/stage_> .

@prefix : <https://marine.gov.scot/metadata/saved/rap_service_v0.3/66f1b101-7c04-4413-9258-48ae938cf260/> .
@prefix pre: <https://marine.gov.scot/metadata/saved/rap_service_v0.3/66f1b101-7c04-4413-9258-48ae938cf260/manifest_pre#> .
@prefix jobinst: <https://marine.gov.scot/metadata/saved/rap_service_v0.3/66f1b101-7c04-4413-9258-48ae938cf260/job_> .
@prefix result: <https://marine.gov.scot/metadata/saved/rap_service_v0.3/66f1b101-7c04-4413-9258-48ae938cf260/result_> .

:RootManifestResults a saved:ResultsManifest ;
    rdfs:label "results_manifest" ;
    dcterms:title "Results manifest description for example RootManifest"@en ;
    dcterms:description: "This is an example results description, post processing by the SAVED RAP service/job runner" ;
    dcterms:publisher <https://marine.gov.scot> ;

    pav:createdOn "20240714T105900Z" ;
    pav:version "1" ;
    pav:createdAt <:manifest_results_v1.ttl> ;
    pav:createdWith service:application ;
    pav:derivedFrom pre:RootManifest ;

    dcat:downloadURL <:RootManifestResults.ttl> ;
    dcat:mediaType "text/csv" ;
    
    # These really belong to the notion of a data catalogue
    rdr:language "eng" ;
    rdr:repositoryName "RAP service for SAVED" ;
    rdr:type "multidisciplinary" ;
    rdr:subjectName "sustainable aquaculture" ;
    rdr:software: "saved_rap" ;
    rdr:api: "0.3" ;
    rdr:apiUrl service:sparqlSink ;
    rdr:apiDocumentation service:sparqlDoc ;
    rdr:versioning "yes" ;
    rdr:dataAccessType "open" ;
    rdr:dataUploadType "restricted" ;
    rdr:remarks "For now, all data are considered open-access, with appropriate license" ;
    rdr:missionStatementUrl <https://marine.gov.scot/metadata/saved/> .
    
    saved:tables :sampling, :time_density_simple ;
    saved:jobs :job_example_time_density_simple ;
    saved:stages stage:monitor_gcp, stage:fetch_gcp, stage:job_producer, stage:job_runner, stage:bakery_prep, stage:bakery_comp;
    saved:results result:example_time_density_simple .

# Defining these here so I can think about these in the same context as
# this post-processing manifest
# I think that these should actually be generated by fisdat/fisup, and
# ideally shouldn't be repeated. However, these may have to be declared
# here, given we may be substituting the canonical URIs where they
# referred to local files before
<service:density.csv> a dcat:DataSet ;
    pav:createdWith <https://www.r-project.org/> ;
    pav:createdOn "19700101T000000Z" ;
    dcat:title "Example time/density file" ;
    dcat:description "This input file is derived from the time/density example, in turn derived from the sentinel cages sampling example set" ;
    dcat:license <https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/> ;
    dcat:downloadURL <:density.csv> ;
    dcat:mediaType "text/csv" ;
    dcat:format "text/csv" .

<service:cagedata-10.csv> a dcat:DataSet ;
    pav:createdWith <https://www.r-project.org/> ;
    pav:createdOn "19700101T000000Z" ;
    dcat:title "Example cage data file" ;
    dcat:description "This input file is derived from the time/density example, in turn derived from the sentinel cages sampling example set" ;
    dcat:license <https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/> ;
    dcat:downloadURL <:cagedata-10.csv> ;
    dcat:mediaType "text/csv" ;
    dcat:format "text/csv" .

jobinst:example_time_density_simple a saved:JobDesc ;
    # pav:derivedFrom pre:job_example_time_density_simple ;
    pav:createdWith service:fisdat, service:fisup ;
    dcterms:title "Example job time_density_simple" ;
    job:scope_collected [ a saved:ScopeDesc ;
            saved:column "TOTAL" ;
            saved:table <service:cagedata-10.csv> ;
            saved:variable saved:lice_af_total ] ;
    job:scope_modelled [ a saved:ScopeDesc ;
            saved:column "time" ;
            saved:table <service:density.csv> ;
            saved:variable saved:time ],
        [ a saved:ScopeDesc ;
            saved:column "density" ;
            saved:table <service:density.csv> ;
            saved:variable saved:density ] ;
    job:type "density" .
    
result:example_time_density_simple a saved:ResultDesc ;
    rdfs:label "result_time_density_simple" ;
    pav:createdAt <:result_example_time_density_simple.json> ;
    pav:createdWith service:application, stage:job_runner ;
    
    dcat:downloadURL <:result_example_time_density_simple.json> ;
    dcat:mediaType "text/json" ;
    dcat:format "text/json" .
    
stage:monitor_gcp a saved:RAPStageInvocation ;
    rdr:software: "saved_rap" ;
    saved:beam_application "Elixir.RAP" ;
    saved:beam_node "nonode" ;
    saved:beam_host "nohost" ;
    saved:beam_module "Elixir.RAP.Storage.Monitor" ;
    saved:gen_stage_type "Producer" ;
    saved:gen_stage_subscriptions "nil" ;
    saved:gen_stage_dispatcher "Elixir.BroadcastDispatcher" ;
    pav:version "0.3" .
    
stage:fetch_gcp a saved:RAPStageInvocation ;
    rdr:software "saved_rap" ;
    saved:beam_application "Elixir.RAP" ;
    saved:beam_node "nonode" ;
    saved:beam_host "nohost" ;
    saved:beam_module "Elixir.RAP.Storage.GCP" ;
    saved:gen_stage_type "ProducerConsumer" ;
    saved:gen_stage_subscriptions "Elixir.RAP.Storage.Monitor" ;
    saved:gen_stage_dispatcher "Elixir.BroadcastDispatcher" ;
    pav:version "0.3" .

stage:job_producer a saved:RAPStageInvocation ;
    rdr:software "saved_rap" ;
    saved:beam_application "Elixir.RAP" ;
    saved:beam_node "nonode" ;
    saved:beam_host "nohost" ;
    saved:beam_module "Elixir.RAP.Job.Producer" ;
    saved:gen_stage_type "ProducerConsumer" ;
    saved:gen_stage_subscriptions "Elixir.RAP.Storage.GCP" ;
    saved:gen_stage_dispatcher "Elixir.BroadcastDispatcher" ;
    pav:version "0.3" .

stage:job_runner a saved:RAPStageInvocation ;
    rdr:software "saved_rap" ;
    saved:beam_application "Elixir.RAP" ;
    saved:beam_node "nonode" ;
    saved:beam_host "nohost" ;
    saved:beam_module "Elixir.RAP.Job.Runner" ;
    saved:gen_stage_type "ProducerConsumer" ;
    saved:gen_stage_subscriptions "Elixir.RAP.Job.Producer" ;
    saved:gen_stage_dispatcher "Elixir.BroadcastDispatcher" ;
    saved:invoked_job job:density ;
    pav:version "0.3" .
    
stage:bakery_prep a saved:RAPStageInvocation ;
    rdr:software "saved_rap" ;
    saved:beam_application "Elixir.RAP" ;
    saved:beam_node "nonode" ;
    saved:beam_host "nohost" ;
    saved:beam_module "Elixir.RAP.Bakery.Prepare" ;
    saved:gen_stage_type "ProducerConsumer" ;
    saved:gen_stage_subscriptions "Elixir.RAP.Job.Runner" ;
    saved:gen_stage_dispatcher "Elixir.BroadcastDispatcher" ;
    pav:version "0.3" .

stage:bakery_comp a saved:RAPStageInvocation ;
    rdr:software "saved_rap" ;
    saved:beam_application "Elixir.RAP" ;
    saved:beam_node "nonode" ;
    saved:beam_host "nohost" ;
    saved:beam_module "Elixir.RAP.Bakery.Compose" ;
    saved:gen_stage_type "Consumer" ;
    saved:gen_stage_subscriptions "Elixir.RAP.Bakery.Prepare" ;
    saved:gen_stage_dispatcher "Elixir.BroadcastDispatcher" ;
    pav:version "0.3" .
